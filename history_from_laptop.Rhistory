library(XML)
con = url("http://scholar.google.com/citations?user=HI-I6C0AAAAJ&hl=en")
htmlCode = readLines(con)
close(con)
htmlCode

f <- file("odm1.3_fullAll_items_2013-01-30-094910395.xml/odm1.3_fullAll_items_2013-01-30-094910395.xml","r")
xml = read.spss(file="All_items_spss/All_items_ddl_spss.sps")
f <- file("All_items_spss/All_items_ddl_spss.sps","r")
xml = read.spss(file="All_items_spss/All_items_ddl_spss.sps")
xml = read.spss(f)
f <- file("All_items_spss/All_items_ddl_spss.sps","r")
xml = read.spss(f)
"
doc = xmlTreeParse("odm1.3_fullAll_items_2013-01-30-094910395.xml/odm1.3_fullAll_items_2013-01-30-094910395.xml", useInternal = TRUE)
?xmlTreeParse("pubmed.xml", useInternal = TRUE)
top = xmlRoot(doc)
xmlName(top)
[1] "ArticleSet"
names(top) - child nodes of this root
[1]
?xmlTreeParse("pubmed.xml", useInternal = TRUE)
top = xmlRoot(doc)
xmlName(top)
[1] "ArticleSet"
names(top) - child nodes of this root
[1]
?XML
?xmlTreeParse
library(XML)
if (ODMfile1 == "") ODMfile1 <- file.choose()
ODMfile1 <- file.choose()
ODM = xmlRoot(xmlTreeParse(ODMfile1))
MD <- ODM[["Study"]][["MetaDataVersion"]]
MD
IDefnodes <- MD[names(xmlChildren(MD)) == "ItemDef"]
IDefnodes
xpathSApply(ODM, "//title", xmlValue)
xpathSApply(MD, "//ItemDef", xmlValue)
?xpathSApply
?cat
?=
library("XML", lib.loc="C:/Users/jean.CLINOVO/Documents/R/win-library/2.15")
?survival
??survival
fileName <- "odm1.3_fullAll_items_2013-01-30-094910395.xml/odm1.3_fullAll_items_2013-01-30-094910395.xml"
# f <- file(fileName,"r")
# f <- file("All_items_spss/All_items_ddl_spss.sps","r")
# doc = xmlTreeParse("odm1.3_fullAll_items_2013-01-30-094910395.xml/odm1.3_fullAll_items_2013-01-30-094910395.xml", useInternal = TRUE)
# f <- file("odm1.3_fullAll_items_2013-01-30-094910395.xml/odm1.3_fullAll_items_2013-01-30-094910395.xml","r")
parseODM(fileName)
?function
?
??function
?
?source
source(parseODM.R)
source("parseODM.R")
parseODM(fileName)
source("parseODM.R")
parseODM(fileName)
getwd()
getwd()
setwd("..")
getwd()
parseODM(fileName)
library(XML)
# choose file and test if exists
if (ODMfile1 == "")
ODMfile1 <- file.choose()
parseODM <- function( ODMfile1="" ) {
library(XML)
q
)
if (ODMfile1 == "")
ODMfile1 <- file.choose()
#  else
#      try { open(ODMfile1) }
currentdir <- getwd()
setwd(dirname(ODMfile1))
# parsing
ODM = xmlRoot(xmlTreeParse(ODMfile1))
MD <- ODM[["Study"]][["MetaDataVersion"]]
MD
studyNodes <- MD[names(xmlChildren(MD)) == "Study"]
length(studyNodes)
studyNodes
studyNodes <- MD[names(xmlChildren(ODM)) == "Study"]
length(studyNodes)
getwd()
setwd("..")
getwd()
parseODM(fileName)
print(filename)
print(fileName)
fileName <- "./odm1.3_fullAll_items_2013-01-30-094910395.xml/odm1.3_fullAll_items_2013-01-30-094910395.xml"
getwd()
print(fileName)
parseODM(fileName)
getwd()
setwd("..")
ODM = xmlRoot(xmlTreeParse(fileName))
?names
library(XML)
getwd()
print(fileName)
fileName <- "./odm1.3_fullAll_items_2013-01-30-094910395.xml/odm1.3_fullAll_items_2013-01-30-094910395.xml"
print(fileName)
ODM = xmlRoot(xmlTreeParse(fileName))
#MD <- ODM[["Study"]][["MetaDataVersion"]]
names(ODM)
names(x$children[[1]])
names(ODM$children[[1]])
names(ODM$children[[0]])
names(ODM$children[[2]])
names(ODM$children[2])
names(ODM$children[1])
names(ODM$children[[1]])
ODM$children[1]
ODM$children[[1]
]
names(ODM$children[[1]])
names(xmlChildren[[1]])
names(xmlChildren(ODM))
names(ODM)
foo <-  function(x) {
label <- ifelse(length(x$value), x$value, ifelse(length(x$name), x$name,"doc"))
if(length(x[["children"]])==0) {
cat("\\Tr{",label,"}%\n",sep="")
} else {
cat("\\pstree{\\Tr{",label,"}}{%\n",sep="")
}
}
post <- function(x) if(length(x$children) > 0) cat("}\n")
treeApply(x, foo, post= post)
aa = matrix(c(1000,110,10,1,
0,2000,20,2,
30,300,3000,30000), nrow=3, byrow=TRUE,
dimnames = list(NULL, c("C1", "C2", "C3","C4")))
aa
# left align columns using a tab
write.table(aa,file="c:/users/mark w miller/simple r programs/formatted_tablea.txt", na = 'NA', sep = '\t',
row.names = F, col.names = F)
aa = matrix(c(1000,110,10,1,
0,2000,20,2,
30,300,3000,30000), nrow=3, byrow=TRUE,
dimnames = list(NULL, c("C1", "C2", "C3","C4")))
aa
# left align columns using a tab
write.table(aa,file="c:/users/mark w miller/simple r programs/formatted_tablea.txt", na = 'NA', sep = '\t',
row.names = F, col.names = F)
write.table(aa,file="test.txt", na = 'NA', sep = '\t',
row.names = F, col.names = F)
capture.output( print(aa, print.gap=3)) # , file="capture.txt"
?capture
?capture.output
cat
?cat
?xtable
?xtables
??xtables
??xtable
write.table(x)
write.table(aa)
write.table(aa, sep="^t")
write.table(aa, sep="\t")
write.table(aa, sep="\t\t")
?write.matrix
write.matrix(aa, sep="\t\t")
install.packages("xtable")
library(xtableS)
library("xtable", lib.loc="C:/Users/jean.CLINOVO/Documents/R/win-library/2.15")
library(xtable)
> fm2 <- lm(tlimth ~ sex * ethnicty, data = tli)
> print(xtable(anova(fm2)), type="html")
> fm2 <- lm(tlimth ~ sex * ethnicty, data = tli)
> print(xtable(aa, type="html")
> fm2 <- lm(tlimth ~ sex * ethnicty, data = tli)
> print(xtable(aa))
aa
xtable(aa)
print(xtable(aa))
?xtable
print.xtable(aa)
print(xtable(aa))
print(xtable(aa),type="html")
print(xtable(aa),type="text")
print(xtable(aa),type="plain")
ntable(aa)
??ntable
install.packages("ntable")
prop.table(aa)
?prop.table
aa
?sweep
savehistory("~/R/CIDSC-ODM/history_from_laptop.Rhistory")
